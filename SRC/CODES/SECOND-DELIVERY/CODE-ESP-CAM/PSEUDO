Algoritmo esp32_cam
	
	DEFINIR PWDN_GPIO_NUM COMO entero;
	DEFINIR RESET_GPIO_NUM COMO entero;
	DEFINIR XCLK_GPIO_NUM COMO entero;
	DEFINIR SIOD_GPIO_NUM COMO entero;
	DEFINIR SIOC_GPIO_NUM COMO entero;
	DEFINIR Y9_GPIO_NUM COMO entero;
	DEFINIR Y8_GPIO_NUM COMO entero;
	DEFINIR Y7_GPIO_NUM COMO entero;
	DEFINIR Y6_GPIO_NUM COMO entero;
	DEFINIR Y5_GPIO_NUM COMO entero;
	DEFINIR Y4_GPIO_NUM COMO entero;
	DEFINIR Y3_GPIO_NUM COMO entero;
	DEFINIR Y2_GPIO_NUM COMO entero;
	DEFINIR VSYNC_GPIO_NUM COMO entero;
	DEFINIR HREF_GPIO_NUM COMO entero;
	DEFINIR PCLK_GPIO_NUM COMO entero;
	
	PWDN_GPIO_NUM = 32;
	RESET_GPIO_NUM = -1;
	XCLK_GPIO_NUM = 0;
	SIOD_GPIO_NUM = 26;
	SIOC_GPIO_NUM = 27; 
	Y9_GPIO_NUM = 35; 
	Y8_GPIO_NUM = 34;
	Y7_GPIO_NUM = 39;
	Y6_GPIO_NUM = 36;
	Y5_GPIO_NUM = 21;
	Y4_GPIO_NUM = 19;
	Y3_GPIO_NUM = 18;
	Y2_GPIO_NUM = 5;
	VSYNC_GPIO_NUM = 25;
	HREF_GPIO_NUM = 23;
	PCLK_GPIO_NUM = 22;
	
	IMAGE_WIDTH = 160;
	HEIGHT = 120;
	
	//Dimension rgbMatrix[IMAGE_HEIGHT, IMAGE_WIDTH, 3];
	//Dimension hsvMatrix[IMAGE_HEIGHT, IMAGE_WIDTH, 3];
	
FinAlgoritmo
	// Function to find the maximum of three values
	Funcion findMax(a, b, c) 
		Definir max Como Real;
		max = a;
		Si b > max Entonces
			max = b;
		FinSi
		
		Si c > max Entonces
			max = c;
		FinSi
		//Retorna max (maximum value)
	FinFuncion

				
	// Function to find the minimum of three values
	Funcion findMin(a, b, c) 
		Definir min Como Real;
		min = a;
		Si b < min Entonces
			min = b;
		FinSi
		
		Si c < min Entonces
			min = c;
		FinSi
		
		//Retorna min (minimum value)
	FinFuncion

						
	// Funci칩n para convertir valores RGB a HSV
	Funcion rgbToHsv(r, g, b)
		Definir max, min, delta Como Real;
		//max = findMax(r, g, b); (assign)
		//min = findMin(r, g, b); (assign)
		v = max;

		delta = max - min;
		
		Si max != 0 Entonces	
			s = delta / max;
		SiNo
			s = 0;
			h = -1;
			// FinFuncion (Exit function if max is 0)
		FinSi
		

		Si r = max Entonces
			h = (g - b) / delta;
		FinSi	
		
		Si g = max Entonces;
			h = 2 + (b - r) / delta;
		Finsi
		
		Si b = max Entonces;
			h = 4 + (r - g) / delta;
		FinSi

		h = h * 60;
		
		Si h < 0 Entonces
			h = h + 360;
		FinSi
		
	FinFuncion

												
	// Function to configure the camera
	Funcion setupCamera()
		Definir resultado Como Entero;
		
		// Verify if initialization failed
		Si resultado = 0 Entonces
			Escribir ("The camera didnt turn on");// False
		SiNo
			Escribir ("The camera turned on"); //True
		FinSi
		
	FinFuncion


													
	// Function to process image and store in RGB matrix
	Funcion processAndStoreRGB(fb)
		Si fb = NULL Entonces;
			Escribir "Error en captura de c치mara";
		FinSi
		
		Definir image Como Entero;
		//image = fb.buffer
		
		Definir width, height Como Entero;
		//width = fb.width
		//height = fb.height
		
		Para z = 0 Hasta height - 1
			Para x = 0 Hasta width - 1
				Definir pixel Como Entero;
				Definir x,z Como Entero;
				//image[z, x] = z * width + x; /
				
				Definir r, g, b Como Entero;
				//r = ((pixel >> 11) & 0x1F) * 255 / 31  // Red
				//g = ((pixel >> 5) & 0x3F) * 255 / 63   // Green
				//b = (pixel & 0x1F) * 255 / 31          // Blue
				
				//rgbMatrix[z, x, 0] = r
				//rgbMatrix[z, x, 1] = g
				//rgbMatrix[z, x, 2] = b
			FinPara
		FinPara
		//LiberarFb(fb)
	FinFuncion

															
	// Function to convert RGB matrix to HSV
	Funcion convertRGBtoHSV()
		Definir r, g, b, h, s, v Como Real;
		
		Para z = 0 Hasta IMAGE_HEIGHT - 1
			Para x = 0 Hasta IMAGE_WIDTH - 1
				//r = rgbMatrix[z, x, 0] / 255.0  
				//g = rgbMatrix[z, x, 1] / 255.0  
				//b = rgbMatrix[z, x, 2] / 255.0  
				
				//rgbToHsv(r, g, b, h, s, v)
				
				//hsvMatrix[z, x, 0] = h
				//hsvMatrix[z, x, 1] = s
				//hsvMatrix[z, x, 2] = v
			FinPara
		FinPara
	FinFuncion

	Funcion setup()
		Definir a Como Entero; //setupCamera=a
		
		Si a = 0 Entonces
			Imprimir "Error en configuraci칩n de c치mara";
		FinSi
	FinFuncion

																	
	// Loop main function
	Funcion loop()
		//fb = capturarImagenDesdeCamara()  
		
		Si fb <> NULL Entonces
			//processAndStoreRGB(fb)
			
			//convertRGBtoHSV()
			
			Escribir "Valores de Hue:";
			Para z = 0 Hasta IMAGE_HEIGHT - 1
				Para x = 0 Hasta IMAGE_WIDTH - 1
					//Escribir hsvMatrix[x, x, 0], " ";
				FinPara
				Escribir "";
			FinPara
		Sino
			Escribir "Error al capturar imagen";
		FinSi
		
		Esperar 5 segundos;
	FinFuncion
